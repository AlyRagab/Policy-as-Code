apiVersion: templates.gatekeeper.sh/v1
kind: ConstraintTemplate
metadata:
  name: k8srequiredresourcelimits
spec:
  crd:
    spec:
      names:
        kind: K8sRequiredResourceLimits
      validation:
        openAPIV3Schema:
          type: object
          properties:
            limits:
              type: array
              items:
                type: string
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8srequiredresourcelimits

        violation[{"msg": msg}] {
          container := input.review.object.spec.containers[_]
          not container.resources.limits
          msg := sprintf("container <%v> has no resource limits", [container.name])
        }

        violation[{"msg": msg}] {
          container := input.review.object.spec.containers[_]
          limit := input.parameters.limits[_]
          not container.resources.limits[limit]
          msg := sprintf("container <%v> has no <%v> limit", [container.name, limit])
        }

        violation[{"msg": msg}] {
          container := input.review.object.spec.initContainers[_]
          not container.resources.limits
          msg := sprintf("init container <%v> has no resource limits", [container.name])
        }

        violation[{"msg": msg}] {
          container := input.review.object.spec.initContainers[_]
          limit := input.parameters.limits[_]
          not container.resources.limits[limit]
          msg := sprintf("init container <%v> has no <%v> limit", [container.name, limit])
        } 